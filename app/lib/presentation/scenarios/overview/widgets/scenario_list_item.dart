import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:vision_director/application/scenarios/scenario_list/scenario_list_cubit.dart';
import 'package:vision_director/domain/core/constants.dart';
import 'package:vision_director/domain/scenarios/scenario.dart';
import 'package:vision_director/presentation/common/utils/date_utils.dart';
import 'package:vision_director/presentation/common/widgets/card_wrapper.dart';
import 'package:vision_director/presentation/common/widgets/duration_widget.dart';
import 'package:vision_director/presentation/common/widgets/get_widget_methods.dart';
import 'package:vision_director/presentation/core/screen_arguments/scenario_argument.dart';
import 'package:vision_director/presentation/steps/editor/editor_screen.dart';

class ScenarioListItem extends StatelessWidget {
  final Scenario scenario;

  const ScenarioListItem({super.key, required this.scenario});

  @override
  Widget build(BuildContext context) {
    return CardWrapper(
      child: InkWell(
        onTap: () {
          context.read<ScenarioListCubit>().setCurrentScenario(scenario.id);
          Navigator.of(context).pushNamed(
            EditorScreen.routeName,
            arguments: ScenarioArgument(
              scenario,
            ),
          );
        },
        child: _ScenarioCardContent(scenario: scenario),
      ),
    );
  }
}

class _ScenarioCardContent extends StatelessWidget {
  final Scenario scenario;

  const _ScenarioCardContent({required this.scenario});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        // Thumbnail or placeholder
        AspectRatio(
          aspectRatio: 2,
          child: Stack(
            alignment: AlignmentDirectional.bottomEnd,
            children: [
              if (scenario.thumbnail != null)
                Ink.image(
                  image: NetworkImage(
                    scenario.thumbnail!,
                  ),
                  fit: BoxFit.cover,
                )
              else
                SizedBox.expand(
                  child: Container(
                    width: double.infinity,
                    height: double.infinity,
                    color: Colors.black45,
                    child: const Center(
                      child: Icon(
                        Icons.auto_awesome,
                        size: 40,
                      ),
                    ),
                  ),
                ),
              DurationWidget(
                seconds: scenario.duration + Guidelines.autoGeneratedLength,
              ),
            ],
          ),
        ),
        // Scenario Details
        Padding(
          padding: const EdgeInsets.all(10.0),
          child: Column(
            children: [
              Text(
                scenario.name.getOrCrash(),
                style: const TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.w500,
                ),
              ),
              const SizedBox(
                height: 20,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Row(
                    children: [
                      const Icon(Icons.video_library),
                      const SizedBox(
                        width: 5,
                      ),
                      Text(scenario.stepCount.toString())
                    ],
                  ),
                  Text(
                    getFormattedDate(scenario.createdAt),
                  ),
                  Icon(getProjectStatusIcon(scenario.status)),
                ],
              ),
            ],
          ),
        ),
      ],
    );
  }
}
